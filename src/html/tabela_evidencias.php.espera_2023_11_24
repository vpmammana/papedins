<?php
// Incluir arquivo de configurações de banco de dados
	file_put_contents("log.txt", "Hora de Começar: \n\n\n");

function query_dinamico($query) {
    global $conn;

    // Executa a consulta
    $resultado = mysqli_query($conn, $query);

    if (!$resultado) {
        // Manipula o erro aqui (por exemplo, você pode logar o erro ou exibir uma mensagem)
        echo "Erro na execução da consulta: " . mysqli_error($conn);
        return null;
    }

    // Obtém a linha de resultado
    $linha = mysqli_fetch_assoc($resultado);

    if ($linha) {
        // Retorna o valor do campo 'valor_campo_externo'
        return $linha['valor_campo_externo'];
    } else {
        // Retorna null se não houver linhas ou se o campo não existir
        return null;
    }
}


include "identifica.php.cripto";

echo '<!DOCTYPE html>';
echo '<html lang="pt-br">';
echo '<head>';
echo '    <meta charset="UTF-8">';
echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">';
echo '    <title>Seu Título Aqui</title>';
echo '</head>';
echo '<body>';

echo '
<div id="cabecalio-container">
<input id="botao_de_percorrer" value="grava status" type="button" onclick="percorrerElementosDoDOM()">
<label class="titulo_da_pagina" style="background-color: transparent">Tabela de Evidências</label><label class="botao_cria" style="float: right"><input id="cria_evidencia" type="button" onclick="window.open(`https://hpo3yjcd.specchio.info/dev_vitor/papedins/src/html/inseridencia.php`,`_blank`);" value="Criar Evidência" style="height:95%; padding: 20px; font-size: 1.4rem;"></label>
</div>



<div id="table-container">
';

// Criar conexão com o banco de dados
$conn = new mysqli('localhost', $username, $pass, $nome_base_dados);

// Checar conexão
if ($conn->connect_error) {
    die("Conexão falhou: " . $conn->connect_error);
}

// Consulta SQL
$sql = "SELECT @id_evidencia := e.id_chave_evidencia AS id_evidencia,
	       CONCAT('<td class=\'fr_evidencia\'><div class=\'div_evidencia\'>(', e.id_chave_evidencia, ') ', e.nome_evidencia, '</div></td>') as evidencia,
               CONCAT('<td class=\'fr_data\'><div class=\'celula_dados_container\'>', '<div class=\'dados_atomicos\'>',e.data, '</div><div class=\'dados_atomicos\'>',(select nome_grupo_de_token  from evidencias, tokens, grupos_de_tokens where id_token_tipo_de_evidencia = id_chave_token and id_grupo_de_token = id_chave_grupo_de_token and id_chave_evidencia = @id_evidencia),'</div></div></td>') as data,
               CONCAT('<td class=\'fr_grupo\'><div class=\'fr_container_flex\'>', GROUP_CONCAT(DISTINCT CONCAT('<div class=\'fr_autor\'>', p.nome_pessoa, '</div>') SEPARATOR ''), '</div></td>') AS autores,
               CONCAT(
			'<td class=\'fr_grupo\'><div class=\'fr_container_flex\'>', 
			GROUP_CONCAT(DISTINCT CONCAT('<div class=\'fr_identificador\'>', 
			tdi.nome_tipo_de_identificador, ': <span class=\'valor_evidencia\'>', 
			CASE WHEN 
				(SELECT tabela_externa FROM tipos_de_identificadores WHERE id_chave_tipo_de_identificador = tdi.id_chave_tipo_de_identificador)  is null 
			THEN  
				etdi.valor 
			ELSE 
				CONCAT(
					'[[SELECT ', 
					(SELECT nome_campo_do_nome_externo FROM tipos_de_identificadores WHERE id_chave_tipo_de_identificador = tdi.id_chave_tipo_de_identificador) ,
					' as valor_campo_externo FROM ',
					(SELECT tabela_externa FROM tipos_de_identificadores WHERE id_chave_tipo_de_identificador = tdi.id_chave_tipo_de_identificador) , 
					' WHERE ', 
					(SELECT nome_campo_da_chave_primaria_externa FROM tipos_de_identificadores WHERE id_chave_tipo_de_identificador = tdi.id_chave_tipo_de_identificador),
					' = ',
					REPLACE(REPLACE(REPLACE(valor, '\r', ''), '\n', ''), '\t', ''), 
					']]')
			END, 
			'</span></div>') SEPARATOR ''
			), 
			'</div></td>') AS identificadores,
	       CONCAT('<td class=\'fr_img\'><img class=\'icone\' src=\'',REPLACE((SELECT valor FROM evidencias_tipos_de_identificadores WHERE id_evidencia = @id_evidencia AND id_tipo_de_identificador = (SELECT id_chave_tipo_de_identificador FROM tipos_de_identificadores WHERE nome_tipo_de_identificador = 'FILE')),'/var/www/html/dev_vitor/papedins','../..'), '\'></td>') AS file
	    #   CONCAT('<td class=\'fr_data\'>',(select nome_grupo_de_token  from evidencias, tokens, grupos_de_tokens where id_token_tipo_de_evidencia = id_chave_token and id_grupo_de_token = id_chave_grupo_de_token and id_chave_evidencia = @id_evidencia), '</td>') as grupo_de_token 
        FROM evidencias e
        LEFT JOIN autores_evidencias ae ON e.id_chave_evidencia = ae.id_evidencia
        LEFT JOIN pessoas p ON ae.id_pessoa = p.id_chave_pessoa
        LEFT JOIN evidencias_tipos_de_identificadores etdi ON e.id_chave_evidencia = etdi.id_evidencia
        LEFT JOIN tipos_de_identificadores tdi ON etdi.id_tipo_de_identificador = tdi.id_chave_tipo_de_identificador
        GROUP BY e.id_chave_evidencia ORDER BY tdi.ordem_exposicao ASC";

$result = $conn->query($sql);
$padrao = '/\[\[(SELECT .*?)\]\]/i';
$resultados=array();
// Verificar e exibir os resultados
if ($result->num_rows > 0) {
    echo '<table id="table_principal">';
    while($row = $result->fetch_assoc()) {
	$id_evidencia = $row["id_evidencia"];
	$identificadores = $row["identificadores"] ?? "<td class='fr_grupo'><div class='falta'>Sem identificadores</div></td>"; // Se não houver identificadores, exibir "Sem identificadores"
	file_put_contents("log.txt", $identificadores . "\n", FILE_APPEND);
	$novos_identificadores = $identificadores;

// Verifica se a string contém a substring desejada

	if (preg_match($padrao, $identificadores, $resultados)) {
		$valor_externo = query_dinamico($resultados[1]);
		$novos_identificadores = preg_replace('/\[\[.*?\]\]/', $valor_externo, $identificadores);
	} else {$valor_externo = "erro ao extrair campo externo";}
	echo '<tr data-id-evidencia="'.$id_evidencia.'">';
        echo $row["evidencia"];
        echo $row["file"] ?? "<td class='fr_data'><div class='falta'>Sem arquivo</div></td>"; // Se não houver arquivo, exibir "Sem arquivo"
        echo $row["autores"] ?? "<td class='fr_grupo'><div class='falta'>Sem autores</div></td>"; // Se não houver autores, exibir "Sem autores"
        echo $novos_identificadores; // Se não houver identificadores, exibir "Sem identificadores";
        // echo $row["grupo_de_token"];
        echo $row["data"];
	echo '</tr>';
    }
    echo '</table>';
} else {
    echo "<div class='div_evidencia'>0 resultados</div>"; // Se não houver resultados, exibir "0 result
}

// Fechar conexão
$conn->close();
?>

<!-- CSS para estilização -->
<style>


/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
html, body {
	line-height: 1;
	width: auto;
	height: auto;
                 height: auto;
                        min-height: 100%;
                        overflow-x: auto!important;
                        overflow-y: auto;

}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
	overflow: auto;
}
table > * {
	border-collapse: collapse;
	border-spacing: 0;
	box-sizing: border-box;
	overflow: hidden;
}

#botao_de_percorrer {
    background-color: #4CAF50; /* Green */
    border: none;
    color: white;
    padding: 10px 10px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 1.4rem;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 5px;
}

/*  * {
  outline: 1px solid #f00 !important;
}  isso aqui permite ver os limites dos elementos para debug*/

		html {
			background-color: black;
		}

* {
    outline: 1px solid yellow; /* Isso aplicará uma outline amarela de 1px a todos os elementos */
}


	  #cabecalio-container {
			display: flex;
                        width: 99%;
			height: 4vw;
                        top: 0px;
                        left: 0px;
                        position: absolute;
                        background-color: #1B5543;
                        padding: 10px;
			overflow: auto;

                }


           #table-container {
			display: inline;
                        overflow-y: auto;
                        overflow-x: auto;
                        width: auto;
                        position: absolute;
			top: 10%;
			height: auto;
			left: 0%;
			background-color: #FF0000;
		}
	table_principal {
		flex-shrink: 0;
		overflow: auto;
	}

    body {
	font-family: Arial, Helvetica, sans-serif;
	background-color: #202030;
	color: white;
	margin: 0px;
	padding: 0px;
    }


    .fr_container_flex {
        display: flex;
        flex-wrap: wrap;
	flex-direction: column;
    align-items: flex-start; /* alinhamento no topo no eixo vertical */
    }

    .celula_dados_container {
	display: flex;
	flex-wrap: wrap;
	flex-direction: columns;
    }

    .titulo_da_pagina {
	padding: 10px;
	font-size: 2em;
	background-color: transparent;	
     }

    .dados_atomicos {
	padding: 5px;
	color: black;
	font-size: 0.9em;
	background-color: #00FF00;
	border-radius: 5px;
	border: 2px solid black;
	box-sizing: border-box;
    	display: inline-block;
	font-size: 1.3em;
	margin: 3px;
	}
    .fr_grupo {
	color: white;
	padding: 20px;

    }

    .fr_autor, .fr_identificador {
        padding: 10px;
	border-radius: 10px;
	font-size: 1.3em;
	margin: 5px;
    justify-content: flex-start; /* alinhamento à esquerda no eixo horizontal */
	}

    .fr_identificador {
	background-color: #1010AA;
        color: #CCBBB5; /* Cor do texto */
        border: 2px solid #CCBBEE; /* Cor da borda */
	}

    .fr_autor {
	background-color: #005010;
        color: white; /* Cor do texto */
        border: 2px solid orange; /* Cor da borda */
	}

    .div_evidencia {
        border: 3px solid black; /* Cor da borda */
        background-color: #CC5010; /* Cor de fundo */
        color: white; /* Cor do texto */
        padding: 5px;
	border-radius: 10px;
	font-size: 1.3em;
	color: black;
	display: inline-block;
	word-wrap: break-word;
	
     }
    .fr_evidencia  {
        padding: 20px;
	color: white;
	font-size: 1.1em;
	font-weight: bold;
	word-wrap: break-word;
	max-width: 15vw;
    }
    .fr_data {
        padding: 10px;
	color: white;
	max-width: 10vw;
    }
    .fr_img {
        padding: 10px;
	color: white;
    }
    .falta{
	color: white;
	font-size: 0.9em;
	background-color: #000099;
	border-radius: 5px;
	border: 2px solid #0000CC;
	box-sizing: border-box;
    	display: inline-block;
	}
    table {
        width: auto;
        border-collapse: collapse;
    }

    td {
	vertical-align: top;
    }
table tr:hover {
  background-color: #102045; /* Altera a cor da borda para vermelho */
}
tr:not(:first-child) td {
    /* Estilos CSS aqui */
        border-top: 1px solid #506010;
}

	.valor_evidencia {
		color: #AAFFFF;
		font-weight: bold;
	}
tr:nth-child(odd) {
    background-color: #002030;
}

tr:nth-child(even) {
    background-color: #001040;
}

.icone {
  max-width: 10vw;  /* Limita a largura máxima da imagem a 10% do viewport */
  height: auto;    /* Mantém a altura proporcional à largura, preservando a razão de aspecto */
}

</style>

<<script>

var min_top=1000000; // valor inicial para o top, que indicará o elemento mais acima na tela para o debugger_definitivo.php
var max_bottom=-1000000; // valor inicial para o bottom, que indicará o elemento mais abaixo na tela para o debugger_definitivo.php
var min_left=1000000; // valor inicial para o left, que indicará o elemento mais à esquerda na tela para o debugger_definitivo.php
var max_right=-1000000; // valor inicial para o right, que indicará o elemento mais à direita na tela para o debugger_definitivo.php


function enviarDadosParaServidor(dados) {
    console.log(dados);
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'debugger_definitivo.php', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.send(JSON.stringify(dados));
}

function coletarDadosDoElemento(elemento) {
    var estilosComputados = window.getComputedStyle(elemento);
    var retangulo = elemento.getBoundingClientRect();
    let elementoParentNodeTag;
    let elementoParentNodeId;	
    let elementoParentNodeClass;
    let elementoParentElementTag;
    let elementoParentElementId;
    let elementoParentElementClass;


    if (elemento.parentNode === null) {
	elementoParentNodeTag = 'ParentNode nulo';
	elementoParentNodeId = 'ParentNode nulo';
	elementoParentNodeClass = 'ParentNode nulo';
    } else {
	elementoParentNodeTag = elemento.parentNode.tagName;
	elementoParentNodeId = elemento.parentNode.id;
	elementoParentNodeClass = elemento.parentNode.className;
    }

    if (elemento.parentElement === null) {
	elementoParentElementTag = 'ParentElement nulo';
	elementoParentElementId = 'ParentElement nulo';
	elementoParentElementClass = 'ParentElement nulo';
    } else {
	elementoParentElementTag = elemento.parentElement.tagName;
	elementoParentElementId = elemento.parentElement.id;
	elementoParentElementClass = elemento.parentElement.className;
    }

	if ( retangulo.top < min_top) {min_top=retangulo.top;}
	if ( retangulo.bottom > max_bottom) {max_bottom=retangulo.bottom;}
	if ( retangulo.left < min_left) {min_left=retangulo.left;}
	if ( retangulo.right > max_right) {max_right=retangulo.right;}

    return {
        tag: elemento.tagName,
        id: elemento.id,
	type: elemento.type,
        class: elemento.className,
	tag_no_pai: elementoParentNodeTag,
	id_no_pai: elementoParentNodeId, 
	class_no_pai: elementoParentNodeClass, 
	tag_elemento_pai: elementoParentElementTag,
	id_elemento_pai: elementoParentElementId, 
	class_elemento_pai: elementoParentElementClass, 
        position: estilosComputados.position,
        display: estilosComputados.display,
        top: retangulo.top,
        left: retangulo.left,
        bottom: retangulo.bottom,
        right: retangulo.right,
        height: retangulo.height,
        width: retangulo.width,
        padding: estilosComputados.padding,
        margin: estilosComputados.margin,
	flex_shrink: estilosComputados.flexShrink,
	max_width: estilosComputados.maxWidth,
	min_width: estilosComputados.minWidth,
	overflow: estilosComputados.overflow
    };
}

function percorrerElementosDoDOM() {
    alert('vai percorrer');
    var todosElementos = document.querySelectorAll('*');
    var dadosElementos = Array.from(todosElementos).map(coletarDadosDoElemento);
    var dados = {
	min_top: min_top,
	max_bottom: max_bottom,
	min_left: min_left,
	max_right: max_right,
    };
    dadosElementos.unshift(dados);
    enviarDadosParaServidor(dadosElementos);
}


document.addEventListener("DOMContentLoaded", function() {
setTimeout( function () {
  document.body.style.display='block';

  var windowHeight = window.innerHeight || document.documentElement.clientHeight;
  var upperDivHeight = document.querySelector('#cabecalio-container').offsetHeight;
  var upperDivHeight_1 = document.querySelector('#cabecalio-container').getBoundingClientRect().height;
  var dynamicDiv = document.getElementById('table-container');
  dynamicDiv.style.height = (windowHeight - upperDivHeight_1) + 'px';
  dynamicDiv.style.top = upperDivHeight_1 + 'px';
  dynamicDiv.style.left = '0px';
  document.getElementById('cria_evidencia').style.height=upperDivHeight_1 - 15 + 'px';
  document.getElementById('cria_evidencia').style.top= '0px';
 }, 1000);


	document.querySelectorAll('table tr').forEach(function(tr) {
	    tr.addEventListener('dblclick', function(event) {
			window.open("https://hpo3yjcd.specchio.info/dev_vitor/papedins/src/html/inseridencia.php?id_evidencia=" + this.getAttribute("data-id-evidencia"), "_blank");
	        })
	    });


});
</script>

<?php
echo '
</div>
</body>';
echo '</html>';
?>

